[
    {
        "id": "f15c4f24f8bcd86b",
        "type": "tab",
        "label": "MXD Traffic Generator",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7b027322cdfbb6fc",
        "type": "tab",
        "label": "Log",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "46e2b46aee92bd4c",
        "type": "subflow",
        "name": "Credentials",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 100,
                "wires": [
                    {
                        "id": "7e21b484db49ff50"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 290,
                "y": 100,
                "wires": [
                    {
                        "id": "7e21b484db49ff50",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Username",
                "type": "cred"
            },
            {
                "name": "Password",
                "type": "cred"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7c3ae8806aa3856f",
        "type": "serial-port",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "$",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "7e21b484db49ff50",
        "type": "function",
        "z": "46e2b46aee92bd4c",
        "name": "",
        "func": "msg.username = env.get(\"Username\");\nmsg.password = env.get(\"Password\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c48617baed8e6eb2",
        "type": "comment",
        "z": "46e2b46aee92bd4c",
        "name": "",
        "info": "Go to \"edit properties\" in the flow menu to add enviroment variables. Don't forget to expand a variable to set the option \"input type\" to credentials.",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "1e2997ff0f3c3dbc",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "init globals",
        "func": "context.global.telitUrl = \"http://api-dev.devicewise.com/api\";\ncontext.global.telitSessionId = null;\ncontext.global.server = \"192.168.254.11\";\ncontext.global.test = \"none\";\ncontext.global.status = \"unknown\";\ncontext.global.reply = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 120,
        "wires": [
            [
                "76ecae952370bd68"
            ]
        ]
    },
    {
        "id": "b43ce7761292b6c8",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "start up",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "1e2997ff0f3c3dbc",
                "0805d534663de5df"
            ]
        ]
    },
    {
        "id": "b33ae6faee7c563e",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "auth",
        "func": "context.global.telitSessionId = null;\ncontext.global.telitOrg = null;\n\nvar userid = context.global.userid;\nvar password = context.global.password;\n\n\nif( userid && password)\n{\n\n    msg.url = context.global.telitUrl;\n\n    msg.method = \"POST\";\n\n\n    msg.payload = {\n        \"auth\" : {\n            \"command\" : \"api.authenticate\",\n            \"params\" : {\n                \"username\": userid,\n                \"password\": password\n            }\n        }\n    }\n\n    return msg;\n}\nelse\n    return null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 320,
        "wires": [
            [
                "368137eca43625de"
            ]
        ]
    },
    {
        "id": "368137eca43625de",
        "type": "http request",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 530,
        "y": 320,
        "wires": [
            [
                "4b5849fc17bfb751",
                "8c34089516bf9445"
            ]
        ]
    },
    {
        "id": "6d20c3f26994ede0",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "session id",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 320,
        "wires": []
    },
    {
        "id": "4b5849fc17bfb751",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "save sessionId",
        "func": "if (msg.payload?.auth?.params?.sessionId)\n{\n    context.global.telitSessionId = msg.payload.auth.params.sessionId;\n    context.global.telitOrg = msg.payload.auth.params.orgKey;\n\n    return msg;\n}\ncontext.global.telitSessionId = null;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 320,
        "wires": [
            [
                "6d20c3f26994ede0",
                "347b4987103bbc13"
            ]
        ]
    },
    {
        "id": "ee2a989c3b3a9356",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "8 hr",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "28800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "b33ae6faee7c563e"
            ]
        ]
    },
    {
        "id": "347b4987103bbc13",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "MXD org",
        "func": "\nmsg.url = context.global.telitUrl;\n\nmsg.method = \"POST\";\n\n\nmsg.payload = {\n\n     \"1\": {\n        \"command\" : \"session.org.switch\",\n            \"params\" : {\n            \"key\": \"MXD_CHI\"\n        }\n    }\n};\n    \nmsg.headers = { sessionId: context.global.telitSessionId };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 360,
        "wires": [
            [
                "8a45b6dc9900272d"
            ]
        ]
    },
    {
        "id": "8a45b6dc9900272d",
        "type": "http request",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "method": "use",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 530,
        "y": 360,
        "wires": [
            [
                "165be713494f3c81"
            ]
        ]
    },
    {
        "id": "165be713494f3c81",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "org change",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 360,
        "wires": []
    },
    {
        "id": "8c34089516bf9445",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "auth reply",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 720,
        "y": 280,
        "wires": []
    },
    {
        "id": "3c385ffe01e7ea4a",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "to Telit",
        "func": "\nvar object = msg.object;\n\n\nvar propertyData = [];\nvar attributeData = [];\nvar alarmData = [];\nvar location = null;\n\nfunction telitTimestamp(time)\n{\n    //\"ts\": \"2016-10-01T00:00:00.000Z\n    var d = new Date();\n    if(time !== undefined)\n        d = new Date(time);\n    \n    var month = (d.getMonth() + 1);\n    month = month < 10 ? \"0\" + month : month;\n    var day = d.getDate() < 10 ? \"0\" + d.getDate() : d.getDate();\n    var hour = d.getHours() < 10 ? \"0\" + d.getHours() : d.getHours();\n    var min = d.getMinutes() < 10 ? \"0\" + d.getMinutes() : d.getMinutes();\n    var sec = d.getSeconds() < 10 ? \"0\" + d.getSeconds() : d.getSeconds();\n\n    var timestamp = d.getFullYear() + \"-\" + month + \"-\" + day + \"T\" + hour + \":\" + min + \":\" + sec +\".000Z\";\n    return timestamp;\n\n}\n\nif (context.global.telitSessionId === null)\n{\n    return null;\n}\n\n\nvar props = msg.payload.props;\nvar attributes = msg.payload.attributes;\nvar alarms = msg.payload.alarms;\nvar timestamp = telitTimestamp();\n\nfor (var key in props) {\n\n    let value = props[key];\n    let item = {};\n    item.corrId = msg.corrId;\n    item.ts = timestamp;\n\n    item.key = key.toLowerCase();\n    item.value = value;\n    propertyData.push(item);\n}\n\nfor (var key in attributes) {\n\n    let value = attributes[key];\n    let item = {};\n    item.corrId = msg.corrId;\n    item.ts = timestamp;\n    item.key = key.toLowerCase();\n    item.value = \"\" + value;\n    attributeData.push(item);\n}\n\nfor (var key in alarms) {\n\n    let value = alarms[key];\n    let item = {};\n    item.corrId = msg.corrId;\n    item.ts = timestamp;\n    item.key = key.toLowerCase();\n    item.state = 0;\n    if (value != \"NO\")\n        item.state = 1;\n    alarmData.push(item);\n}\n\nvar telitMsg = {};\ntelitMsg.url = context.global.telitUrl;\n\ntelitMsg.method = \"POST\";\n\ntelitMsg.payload = {};\n\nif(propertyData.length > 0)\n    telitMsg.payload[\"prop\"] = {\n        command: \"property.batch\",\n        params: {\n            thingKey: object,\n            data: propertyData\n        }\n    };\n\nif(attributeData.length > 0)\n    telitMsg.payload[\"attr\"] = {\n        command: \"attribute.batch\",\n        params: {\n            thingKey: object,\n            data: attributeData\n        }\n    };\n\nif(alarmData.length > 0)\n    telitMsg.payload[\"alarms\"] = {\n        command: \"alarm.batch\",\n        params: {\n            thingKey: object,\n            data: alarmData\n        }\n    };\n\nif(msg.payload.location && msg.payload.location.lat && msg.payload.location.lng)\n{\n    telitMsg.payload[\"loc\"] = {\n        command: \"location.publish\",\n            params: {\n            thingKey: object,\n                lat: msg.payload.location.lat,\n                lng: msg.payload.location.lng,\n                fixType: msg.payload.location.type,\n                fixAcc: msg.payload.location.accuracy\n        }\n    }\n}\n\nif(Object.keys(telitMsg.payload).length === 0) return null;\n\ntelitMsg.headers = { sessionId: context.global.telitSessionId };\nreturn telitMsg;\n\n\n    \n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 540,
        "wires": [
            [
                "ceb06bac4ecfe017",
                "7f244ccf62b1e3a2"
            ]
        ]
    },
    {
        "id": "7f244ccf62b1e3a2",
        "type": "http request",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "method": "use",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 530,
        "y": 540,
        "wires": [
            [
                "86e7411b1ed150e5",
                "3c8faceecb7670cb"
            ]
        ]
    },
    {
        "id": "86e7411b1ed150e5",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "update reply",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 750,
        "y": 480,
        "wires": []
    },
    {
        "id": "ceb06bac4ecfe017",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "update request",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 540,
        "y": 480,
        "wires": []
    },
    {
        "id": "d30244a5f6867f5e",
        "type": "link in",
        "z": "f15c4f24f8bcd86b",
        "name": "toTelit",
        "links": [
            "71d64d48.cd3234",
            "0fc438aef772fa4d",
            "6671d6e51cb82d2e",
            "f65565ef4742cbc1",
            "6ae3f6b306affc85",
            "3dec8cb44c3b729d",
            "dd8abc7326ceba32",
            "a80f9413cf8979bf"
        ],
        "x": 165,
        "y": 540,
        "wires": [
            [
                "3c385ffe01e7ea4a"
            ]
        ]
    },
    {
        "id": "4c025ce486926d1d",
        "type": "exec",
        "z": "f15c4f24f8bcd86b",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "b4a40cae750a46db",
                "19152957a554812d"
            ],
            [
                "b4a40cae750a46db",
                "19152957a554812d"
            ],
            [
                "b4a40cae750a46db",
                "19152957a554812d"
            ]
        ]
    },
    {
        "id": "1a71eec7d1590277",
        "type": "http in",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "url": "/run",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 740,
        "wires": [
            [
                "12fd6fee60ded630",
                "2277db1737ac5032"
            ]
        ]
    },
    {
        "id": "12fd6fee60ded630",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "args",
        "func": "\nmsg.corrId = msg.payload.cmd;\nmsg.object = msg.payload.key;\nmsg.payload = msg.payload.cmd;\n\nflow.set(\"reply\", \"\");\n\nif(msg.payload.startsWith(\"{\"))\n{\n    return [null,msg]\n}\nelse\n    return [msg,null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 740,
        "wires": [
            [
                "4c025ce486926d1d"
            ],
            [
                "3eede33bf5feef0a"
            ]
        ]
    },
    {
        "id": "7ea83d3ccce48c10",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "send reply",
        "func": "msg.payload = { attributes: {cmd_reply:msg.payload}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 680,
        "wires": [
            [
                "f65565ef4742cbc1"
            ]
        ]
    },
    {
        "id": "0744f19219966011",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1160,
        "wires": [
            [
                "2ca4206911762fd0"
            ]
        ]
    },
    {
        "id": "2ca4206911762fd0",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "All Bands",
        "func": "msg.reply = \"\";\nmsg.payload = \"AT!BAND=00\\r\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1160,
        "wires": [
            [
                "6875564a8a0cafb1"
            ]
        ]
    },
    {
        "id": "6875564a8a0cafb1",
        "type": "tcp request",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "server": "192.168.1.1",
        "port": "5510",
        "out": "sit",
        "ret": "string",
        "splitc": " ",
        "newline": "",
        "trim": false,
        "tls": "",
        "x": 620,
        "y": 1280,
        "wires": [
            [
                "37fac71a68f03778",
                "507634dfea0c9c4a",
                "b5fcad83889c3c42"
            ]
        ]
    },
    {
        "id": "cd598b5e13245f52",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1240,
        "wires": [
            [
                "d770047b31802d6c"
            ]
        ]
    },
    {
        "id": "d770047b31802d6c",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "Band 66",
        "func": "msg.reply = \"\";\nmsg.payload = \"AT!BAND=06\\r\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1240,
        "wires": [
            [
                "6875564a8a0cafb1"
            ]
        ]
    },
    {
        "id": "c81c0ac587d17032",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1100,
        "wires": [
            [
                "dbbc2bc794a6020e"
            ]
        ]
    },
    {
        "id": "dbbc2bc794a6020e",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "Band status",
        "func": "msg.reply = \"\";\nmsg.payload = \"AT!BAND?\\r\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1100,
        "wires": [
            [
                "6875564a8a0cafb1"
            ]
        ]
    },
    {
        "id": "6349bfcf3bbfa89c",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "30 sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "7",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1320,
        "wires": [
            [
                "5f1028caa22e0ea8"
            ]
        ]
    },
    {
        "id": "5f1028caa22e0ea8",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "gstatus",
        "func": "msg.reply = \"\";\nmsg.payload = \"AT!gstatus?\\r\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1320,
        "wires": [
            [
                "6875564a8a0cafb1"
            ]
        ]
    },
    {
        "id": "197541532dd56f80",
        "type": "http in",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "url": "/AT",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "478f7136b0e5d145",
                "126cf510e349fdb7"
            ]
        ]
    },
    {
        "id": "478f7136b0e5d145",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "get CMD",
        "func": "\nmsg.corrId = msg.payload.cmd;\nmsg.object = msg.payload.key;\nmsg.payload = msg.payload.cmd+\"\\r\";\nmsg.reply = \"\";\nflow.set(\"pending\", true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1040,
        "wires": [
            [
                "6875564a8a0cafb1",
                "615220bd3fc3e32f"
            ]
        ]
    },
    {
        "id": "6df1f0de69b37a30",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "send reply",
        "func": "if(msg.object)\n{\n    msg.payload = { attributes: { at_reply: msg.payload } };\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1280,
        "wires": [
            [
                "6ae3f6b306affc85"
            ]
        ]
    },
    {
        "id": "f65565ef4742cbc1",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "d30244a5f6867f5e"
        ],
        "x": 975,
        "y": 680,
        "wires": []
    },
    {
        "id": "6ae3f6b306affc85",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "d30244a5f6867f5e"
        ],
        "x": 1175,
        "y": 1280,
        "wires": []
    },
    {
        "id": "e3888935b03e6279",
        "type": "http response",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "d5c5abc92dc63bae",
        "type": "http response",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 1160,
        "wires": []
    },
    {
        "id": "37fac71a68f03778",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "complete",
        "func": "msg.reply += msg.payload;\nlet pending = flow.get(\"pending\");\n\nif(pending && msg.reply.indexOf(\"OK\") >= 0 || msg.reply.indexOf(\"ERROR\") >= 0)\n{\n    msg.payload = msg.reply;\n    flow.set(\"pending\",false);\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1280,
        "wires": [
            [
                "d5c5abc92dc63bae",
                "6df1f0de69b37a30",
                "8847387dbc9ca25f"
            ]
        ]
    },
    {
        "id": "c47d3524ec27459c",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "AT reply",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 1340,
        "wires": []
    },
    {
        "id": "c0ae5ce8ec9c9749",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "AT cmd",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 980,
        "wires": []
    },
    {
        "id": "6410bb05950a3f9d",
        "type": "catch",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 880,
        "y": 120,
        "wires": [
            [
                "c8155aee1e9f4b26"
            ]
        ]
    },
    {
        "id": "f76ef1bcc56ab53e",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "Catch Error",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 120,
        "wires": []
    },
    {
        "id": "615220bd3fc3e32f",
        "type": "delay",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 560,
        "y": 1040,
        "wires": [
            [
                "4444caa694988188"
            ]
        ]
    },
    {
        "id": "4444caa694988188",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "timeout",
        "func": "if(flow.get(\"pending\") == true)\n{\n    flow.set(\"pending\",false);\n    msg.payload = \"Timeout\";\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 1040,
        "wires": [
            [
                "d5c5abc92dc63bae",
                "b633e64447911ede",
                "0d23e907a4d9fe5a"
            ]
        ]
    },
    {
        "id": "70f3fa8ebe71874c",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "debug",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 1600,
        "wires": [
            [
                "f864832dba88db23"
            ]
        ]
    },
    {
        "id": "f864832dba88db23",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "pending",
        "func": "msg.payload = flow.get(\"pending\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1600,
        "wires": [
            [
                "1518ecec386b3c66"
            ]
        ]
    },
    {
        "id": "1518ecec386b3c66",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "pending AT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1600,
        "wires": []
    },
    {
        "id": "6817145418b61950",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "AT timeout",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 1000,
        "wires": []
    },
    {
        "id": "98e889031fa8a246",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "Cmd",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 680,
        "wires": []
    },
    {
        "id": "aa34f775b329391a",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "Cmd reply",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 800,
        "wires": []
    },
    {
        "id": "63167d8485c1df90",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "1 min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1780,
        "wires": [
            [
                "ccca4b8bf4be4bcd"
            ]
        ]
    },
    {
        "id": "ccca4b8bf4be4bcd",
        "type": "exec",
        "z": "f15c4f24f8bcd86b",
        "command": "/home/mxd/traffic.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 380,
        "y": 1780,
        "wires": [
            [
                "07893c08c4b5e417"
            ],
            [],
            []
        ]
    },
    {
        "id": "07893c08c4b5e417",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "traffic stats",
        "func": "msg.payload = JSON.parse(msg.payload);\nvar update = {payload:{}};\nvar now = new Date().getTime();\nvar last = context.global.traffic;\nif (last === undefined) {\n    last = msg.payload;\n    last.time = now;\n\n}\nvar attributes = {};\nattributes.version = \"V6\";\nattributes.ethernet_ip = \"None\";\nattributes.wi_fi_ip = \"None\";\nattributes.cell_ip = \"None\";\nattributes.wi_fi6_ip = \"None\";\n\nvar props = {};\nfor(var index in msg.payload)\n{\n    var name = index;\n    if(index === \"end\") continue;\n    if(index === \"lo\") continue;\n\n    if(index.indexOf(\"enp\") >=0) name = \"ethernet\";\n    else if (index.indexOf(\"wlp2\") >= 0) name = \"wi_fi\";\n    else if (index.indexOf(\"enx\") >= 0) name = \"cell\";\n    else if (index.indexOf(\"wlx\") >= 0) name = \"wi_fi6\";\n\n    if(last[index] === undefined)\n        last[index] = msg.payload[index];\n        \n    var delta = now - last.time;\n    if(delta > 0)\n    {\n        msg.payload[index].drx = msg.payload[index].rx - last[index].rx;\n        msg.payload[index].dtx = msg.payload[index].tx - last[index].tx;\n        attributes[name+\"_ip\"] = msg.payload[index].ip;\n        props[name + \"_rx\"] = Math.round(1000*msg.payload[index].drx/delta);\n        props[name + \"_tx\"] = Math.round(1000*msg.payload[index].dtx/delta);\n    }\n}\nupdate.payload.attributes = attributes;\nupdate.payload.props = props;\n\ncontext.global.traffic = msg.payload;\ncontext.global.traffic.time = now;\n\nupdate.object = msg.payload[\"enp1s0\"].mac;\nupdate.corrId = \"traffic\";\n\nreturn update;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1780,
        "wires": [
            [
                "0f7ef2217e51a00d",
                "3dec8cb44c3b729d"
            ]
        ]
    },
    {
        "id": "0f7ef2217e51a00d",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "traffic",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1820,
        "wires": []
    },
    {
        "id": "3dec8cb44c3b729d",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "d30244a5f6867f5e"
        ],
        "x": 775,
        "y": 1780,
        "wires": []
    },
    {
        "id": "f2f41cad0e293d23",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "4 sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1900,
        "wires": [
            [
                "f257255f7d5c6be1"
            ]
        ]
    },
    {
        "id": "f257255f7d5c6be1",
        "type": "exec",
        "z": "f15c4f24f8bcd86b",
        "command": "/home/mxd/status.sh",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 380,
        "y": 1900,
        "wires": [
            [
                "dcebdebe26399f8a"
            ],
            [],
            []
        ]
    },
    {
        "id": "dcebdebe26399f8a",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "iperf status",
        "func": "try {\n    msg.payload = JSON.parse(msg.payload);\n    var update = { payload: {} };\n\n    update.object = msg.payload.mac;\n    update.corrId = \"status\";\n    update.payload.attributes = {};\n\n\n    var last = context.global.status;\n    if (last === undefined) {\n        last = msg.payload;\n        context.global.status = msg.payload;\n        update.payload.attributes.iperf = msg.payload.iperf;\n        update.payload.attributes.ifname = msg.payload.ifname || \"unknown\";\n        return update;\n    }\n\n    if (last.iperf != msg.payload.iperf) {\n        context.global.status = msg.payload;\n        update.payload.attributes.iperf = msg.payload.iperf;\n        update.payload.attributes.ifname = msg.payload.ifname || \"unknown\";\n        return update;\n    }\n\n    context.global.status = msg.payload;\n}\ncatch (e) {\n    node.warn(e)\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1900,
        "wires": [
            [
                "4e08c1b012a301d1",
                "dd8abc7326ceba32",
                "cabdde4e08c729c6"
            ]
        ]
    },
    {
        "id": "4e08c1b012a301d1",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "iperf",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1940,
        "wires": []
    },
    {
        "id": "dd8abc7326ceba32",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "d30244a5f6867f5e"
        ],
        "x": 775,
        "y": 1880,
        "wires": []
    },
    {
        "id": "0ad7a7c2b0a71671",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1380,
        "wires": [
            [
                "fc569f1a4bb03ab6"
            ]
        ]
    },
    {
        "id": "fc569f1a4bb03ab6",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "def band 46",
        "func": "msg.payload = 'AT!BAND=04,\"LTE B46\",0,200000000000\\r';\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1380,
        "wires": [
            [
                "6875564a8a0cafb1"
            ]
        ]
    },
    {
        "id": "724a4abffa5692b6",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1520,
        "wires": [
            [
                "48cd1e55d941362a"
            ]
        ]
    },
    {
        "id": "48cd1e55d941362a",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "list bands",
        "func": "msg.payload = 'AT!BAND=?\\r';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1520,
        "wires": [
            [
                "6875564a8a0cafb1"
            ]
        ]
    },
    {
        "id": "69e4e9475a38ce77",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1420,
        "wires": [
            [
                "bdcbb5e5deaf36c7"
            ]
        ]
    },
    {
        "id": "bdcbb5e5deaf36c7",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "def band 66",
        "func": "msg.payload = 'AT!BAND=06,\"LTE B66\",0,0,2\\r';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1420,
        "wires": [
            [
                "6875564a8a0cafb1"
            ]
        ]
    },
    {
        "id": "c2fea8a1215f330e",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1560,
        "wires": [
            [
                "f817d61e6e145c6b"
            ]
        ]
    },
    {
        "id": "f817d61e6e145c6b",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "AT",
        "func": "msg.payload = 'AT\\r';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1560,
        "wires": [
            [
                "6875564a8a0cafb1"
            ]
        ]
    },
    {
        "id": "b4a40cae750a46db",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "reply or error",
        "func": "let reply = context.global.reply[msg._msgid] || \"\";\nif (typeof msg.payload === 'string')\n    reply += msg.payload;\n\ncontext.global.reply[msg._msgid] = reply;\n\nif (msg.payload.code !== undefined) {\n    if(reply == \"\")\n        reply = \"No Reply\";\n    msg.payload = reply;\n    delete context.global.reply[msg._msgid];\n    return msg;\n}\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 740,
        "wires": [
            [
                "e3888935b03e6279",
                "7ea83d3ccce48c10",
                "018aed4d51153c55"
            ]
        ]
    },
    {
        "id": "cabdde4e08c729c6",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "Iperf LED",
        "func": "var status = msg.payload.attributes.iperf;\nvar ifname = msg.payload.attributes.ifname;\nvar led = { payload: \"\" };\nif (status === \"running\")\n    led.payload = \"#3,1,00FF00,0,iperf \" + ifname + \",running,\\n\";\nelse\n    led.payload = \"#3,1,000000,0,iperf,stopped,\\n#2,1,000000,0,Test,none,\\n\";\n\nreturn led;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1900,
        "wires": [
            [
                "5f6d10753fde112a"
            ]
        ]
    },
    {
        "id": "3c8faceecb7670cb",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "Telit LED",
        "func": "var led = { payload: \"\" };\nled.payload = \"#4,1,000000,0,Telit,Offline,\\n\";\ntry{\n    var status = JSON.parse(msg.payload);\n\n\n    if(status?.attr?.success === true || status?.prop?.success === true)\n        led.payload = \"#4,1,00FF00,0,Telit,Online,\\n\";\n\n}\ncatch(e)\n{\n    node.warn(e);\n    context.global.telitSessionId = null;\n}\nreturn led;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 540,
        "wires": [
            [
                "97626e2f2a8ca796"
            ]
        ]
    },
    {
        "id": "3cfe36627d14dde3",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "test LED",
        "func": "var test = context.global.test;\n\nvar led = {payload:\"\"};\nif (test !== \"none\")\n    led.payload = \"#2,1,00FF00,0,Test,\"+test+\",\\n\";\nelse\n    led.payload = \"#2,1,000000,0,Test,Unknown,\\n\";\n\nreturn led;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 800,
        "wires": [
            [
                "f7ebe092f5de9cef"
            ]
        ]
    },
    {
        "id": "9448b6ae02e93777",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "30 sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 2020,
        "wires": [
            [
                "33048f588d7a47a7"
            ]
        ]
    },
    {
        "id": "5a5eef0d9878cd3c",
        "type": "exec",
        "z": "f15c4f24f8bcd86b",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 870,
        "y": 2020,
        "wires": [
            [
                "ff774b164b52a7fa",
                "b1edea12d4138683"
            ],
            [
                "b1edea12d4138683"
            ],
            [
                "b1edea12d4138683"
            ]
        ]
    },
    {
        "id": "ff774b164b52a7fa",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "Server IP LEDs",
        "func": "var status = msg.payload.indexOf(\"1 received\");\nvar led = { payload: \"\" };\nif (status >= 0)\n    led.payload = \"#1,1,00FF00,0,IP \" + msg.ip + \",\" + context.global.server + \" Online,\\n\";\nelse\n    led.payload = \"#1,1,FF0000,0,IP \" + msg.ip + \",\" + context.global.server + \" Offline,\\n\";\n\nreturn led;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 2020,
        "wires": [
            [
                "8c5add3032b20d52"
            ]
        ]
    },
    {
        "id": "d247e509b3c1c3ce",
        "type": "exec",
        "z": "f15c4f24f8bcd86b",
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "2",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 510,
        "y": 2020,
        "wires": [
            [
                "95833beef7e62231",
                "43d9b5622c3544c5"
            ],
            [],
            []
        ]
    },
    {
        "id": "95833beef7e62231",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "ping",
        "func": "var tokens = msg.payload.split(\" \");\n\nmsg.ifname = tokens[2];\nmsg.ip = tokens[4];\n\nmsg.payload = \"ping -c 1 -t 1  \"+context.global.server;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2020,
        "wires": [
            [
                "5a5eef0d9878cd3c"
            ]
        ]
    },
    {
        "id": "33048f588d7a47a7",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "get route",
        "func": "msg.payload = \"ip route get \"+context.global.server;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2020,
        "wires": [
            [
                "d247e509b3c1c3ce"
            ]
        ]
    },
    {
        "id": "3eede33bf5feef0a",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "config",
        "func": "var reply = \"\";\ntry{\n    var config = JSON.parse(msg.payload)\n    \n\n    if(config.test != undefined)\n    {\n        context.global.test = config.test;\n        reply += \" test set to \"+config.test;\n    }\n    if (config.server != undefined)\n    {\n        context.global.server = config.server;\n        reply += \" server set to \"+config.server;\n    }\n}\ncatch(e){\n    node.warn(e);\n    reply += \"Parse error \"+msg.payload;\n    \n}\nmsg.payload = {code:0,message:reply};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 800,
        "wires": [
            [
                "b4a40cae750a46db",
                "3cfe36627d14dde3"
            ]
        ]
    },
    {
        "id": "76ecae952370bd68",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "test LED",
        "func": "var test = context.global.test;\n\nvar led = {payload:\"\"};\nif (test !== \"none\")\n    led.payload = \"#2,1,00FF00,0,Test,\"+test+\",\\n\";\nelse\n    led.payload = \"#1,0,000000,0,Test,Off,\\n#2,0,000000,0,Test,Off,\\n#3,0,000000,0,Test,Off,\\n#4,0,000000,0,Test,Off,\\n#5,0,000000,0,Test,Off,\\n\";\n\nreturn led;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 120,
        "wires": [
            [
                "03ef22d2bea7bf9e"
            ]
        ]
    },
    {
        "id": "b1edea12d4138683",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "ping",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 2080,
        "wires": []
    },
    {
        "id": "43d9b5622c3544c5",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "route",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 2100,
        "wires": []
    },
    {
        "id": "126d4b350f3d104e",
        "type": "link in",
        "z": "f15c4f24f8bcd86b",
        "name": "Display",
        "links": [
            "f7ebe092f5de9cef",
            "97626e2f2a8ca796",
            "03ef22d2bea7bf9e",
            "5f6d10753fde112a",
            "8c5add3032b20d52",
            "52cf9d335f90b2b8"
        ],
        "x": 925,
        "y": 880,
        "wires": [
            [
                "ac38d66296b678d9",
                "a996bbdb6d23f90c"
            ]
        ]
    },
    {
        "id": "f7ebe092f5de9cef",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "126d4b350f3d104e"
        ],
        "x": 775,
        "y": 860,
        "wires": []
    },
    {
        "id": "97626e2f2a8ca796",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "126d4b350f3d104e"
        ],
        "x": 875,
        "y": 540,
        "wires": []
    },
    {
        "id": "03ef22d2bea7bf9e",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "126d4b350f3d104e"
        ],
        "x": 685,
        "y": 120,
        "wires": []
    },
    {
        "id": "5f6d10753fde112a",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "126d4b350f3d104e"
        ],
        "x": 1055,
        "y": 1900,
        "wires": []
    },
    {
        "id": "8c5add3032b20d52",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "126d4b350f3d104e"
        ],
        "x": 1215,
        "y": 2020,
        "wires": []
    },
    {
        "id": "ac38d66296b678d9",
        "type": "serial request",
        "z": "f15c4f24f8bcd86b",
        "name": "serial",
        "serial": "7c3ae8806aa3856f",
        "x": 1190,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "507634dfea0c9c4a",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "parse status",
        "func": "\nif(msg.payload.indexOf(\"at!gstatus\") >=0)\n{\n    try{\n    var json = {payload:{}};\n    var tokens = msg.payload.split(/[\\n\\r]+/);\n\n    let obj = \"\";\n    for(var i in tokens)\n    {\n        if(tokens[i].indexOf(\":\")>=0)\n        {\n            let pair = tokens[i].split(\":\");\n            if(pair.length == 2)\n            {\n                let key = pair[0];\n                let value  = pair[1].replace(/\\t/g, '').trim();\n                if(value == \"\")\n                {\n                    json.payload[key] = {};\n                    obj = key;\n                }\n                else{\n                    if(obj != \"\")\n                        json.payload[obj][key] = value;\n                    else\n                        json.payload[key] = value;\n                }\n            }\n            else if (pair.length == 3)\n            {\n                let lines = tokens[i].split(\"\\t\\t\");\n                for(var j in lines)\n                {\n                    pair = lines[j].split(\":\");\n                    if(pair.length == 2)\n                    {\n                        let key = pair[0];\n                        json.payload[key] = pair[1].replace(/\\t/g, '').trim();\n                    }\n                }\n            }\n        }\n    }\n    return json;\n    }\n    catch(e){\n        node.warn(e);\n        return null;\n    }\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1400,
        "wires": [
            [
                "1741c26703d22ae2",
                "5c32ba4d7d06f994"
            ]
        ]
    },
    {
        "id": "1741c26703d22ae2",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "Cell status",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1460,
        "wires": []
    },
    {
        "id": "5c32ba4d7d06f994",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "Cell LED",
        "func": "var status = msg.payload.Mode;\nvar band = msg.payload[\"System Mode\"];\nvar led = { payload: \"\" };\nif (status === \"Online\")\n    led.payload = \"#5,1,00FF00,0,Cell,\" + status + \" \" + band + \",\\n\";\nelse\n    led.payload = \"#5,1,000000,0,Cell,unknown,\\n\";\n\nreturn led;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1400,
        "wires": [
            [
                "52cf9d335f90b2b8"
            ]
        ]
    },
    {
        "id": "52cf9d335f90b2b8",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "126d4b350f3d104e"
        ],
        "x": 1165,
        "y": 1400,
        "wires": []
    },
    {
        "id": "120b2beccf707192",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "refresh",
        "func": "if (context.global.telitSessionId === null)\n    return msg;\nelse return null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 260,
        "wires": [
            [
                "b33ae6faee7c563e"
            ]
        ]
    },
    {
        "id": "0975dc3010d767aa",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "20 sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 260,
        "wires": [
            [
                "120b2beccf707192"
            ]
        ]
    },
    {
        "id": "6b45c273301412a6",
        "type": "comment",
        "z": "f15c4f24f8bcd86b",
        "name": "Get Autorization token from Telit",
        "info": "Get authorization token, retry every 20 seconds if failure",
        "x": 170,
        "y": 200,
        "wires": []
    },
    {
        "id": "c17d7e00ef46aea0",
        "type": "comment",
        "z": "f15c4f24f8bcd86b",
        "name": "Update Telit properties and attributes",
        "info": "",
        "x": 190,
        "y": 440,
        "wires": []
    },
    {
        "id": "e0a30b1db4dd72af",
        "type": "comment",
        "z": "f15c4f24f8bcd86b",
        "name": "Execute remote command from Telit",
        "info": "",
        "x": 180,
        "y": 620,
        "wires": []
    },
    {
        "id": "2db382506124ba53",
        "type": "comment",
        "z": "f15c4f24f8bcd86b",
        "name": "Ececute remote AT command from Telit",
        "info": "",
        "x": 190,
        "y": 920,
        "wires": []
    },
    {
        "id": "97ce8da12243c184",
        "type": "comment",
        "z": "f15c4f24f8bcd86b",
        "name": "Run periodic audits",
        "info": "",
        "x": 130,
        "y": 1700,
        "wires": []
    },
    {
        "id": "6e5f2ffb8cefc0cb",
        "type": "comment",
        "z": "f15c4f24f8bcd86b",
        "name": "Initialize global variables on start up and clear LED screen",
        "info": "",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "b633e64447911ede",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "send timeout",
        "func": "if(msg.object)\n{\n    msg.payload = { attributes: { at_reply: \"Timeout\"} };\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1040,
        "wires": [
            [
                "a80f9413cf8979bf"
            ]
        ]
    },
    {
        "id": "a80f9413cf8979bf",
        "type": "link out",
        "z": "f15c4f24f8bcd86b",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "d30244a5f6867f5e"
        ],
        "x": 1175,
        "y": 1040,
        "wires": []
    },
    {
        "id": "19152957a554812d",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 640,
        "wires": []
    },
    {
        "id": "d5c96bec8be11c5d",
        "type": "inject",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1460,
        "wires": [
            [
                "7faccb6fee40cee3"
            ]
        ]
    },
    {
        "id": "7faccb6fee40cee3",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "def band 02",
        "func": "msg.payload = 'AT!BAND=02,\"LTE 02\",0,2\\r';\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1460,
        "wires": [
            [
                "6875564a8a0cafb1"
            ]
        ]
    },
    {
        "id": "b5fcad83889c3c42",
        "type": "debug",
        "z": "f15c4f24f8bcd86b",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1220,
        "wires": []
    },
    {
        "id": "2277db1737ac5032",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "log CMD",
        "func": "context.global.log(\"CMD\", msg.payload.cmd);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 680,
        "wires": [
            [
                "98e889031fa8a246"
            ]
        ]
    },
    {
        "id": "018aed4d51153c55",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "log CMD reply",
        "func": "context.global.log(\"CMD reply\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 800,
        "wires": [
            [
                "aa34f775b329391a"
            ]
        ]
    },
    {
        "id": "126cf510e349fdb7",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "log AT",
        "func": "context.global.log(\"AT\", msg.payload.cmd);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 980,
        "wires": [
            [
                "c0ae5ce8ec9c9749"
            ]
        ]
    },
    {
        "id": "0d23e907a4d9fe5a",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "log At timeout",
        "func": "context.global.log(\"AT timeout\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1000,
        "wires": [
            [
                "6817145418b61950"
            ]
        ]
    },
    {
        "id": "8847387dbc9ca25f",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "log AT Reply",
        "func": "context.global.log(\"AT Relpy\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1340,
        "wires": [
            [
                "c47d3524ec27459c"
            ]
        ]
    },
    {
        "id": "c8155aee1e9f4b26",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "log ERROR",
        "func": "context.global.log(\"Failed\", msg.payload);\ncontext.global.log(\"ERROR\", msg.error.message);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 120,
        "wires": [
            [
                "f76ef1bcc56ab53e"
            ]
        ]
    },
    {
        "id": "a996bbdb6d23f90c",
        "type": "delay",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 940,
        "wires": [
            [
                "ac38d66296b678d9"
            ]
        ]
    },
    {
        "id": "20766949b8b7a6e0",
        "type": "comment",
        "z": "f15c4f24f8bcd86b",
        "name": "Version 6",
        "info": "",
        "x": 560,
        "y": 60,
        "wires": []
    },
    {
        "id": "0805d534663de5df",
        "type": "subflow:46e2b46aee92bd4c",
        "z": "f15c4f24f8bcd86b",
        "name": "",
        "env": [
            {
                "name": "Username",
                "type": "cred"
            },
            {
                "name": "Password",
                "type": "cred"
            },
            {
                "name": "Test",
                "type": "cred"
            }
        ],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "6735da9516c0a6d0"
            ]
        ]
    },
    {
        "id": "6735da9516c0a6d0",
        "type": "function",
        "z": "f15c4f24f8bcd86b",
        "name": "save",
        "func": "context.global.userid = msg.username;\ncontext.global.password = msg.password;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "42957c37084c9cdf",
        "type": "file",
        "z": "7b027322cdfbb6fc",
        "name": "",
        "filename": "AttLog",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 590,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "a3ab61dd9be0b1be",
        "type": "function",
        "z": "7b027322cdfbb6fc",
        "name": "Clear Log",
        "func": "var date = new Date();\n\nmsg.payload = date.toISOString()+\": Cleared\";\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 360,
        "wires": [
            [
                "42957c37084c9cdf"
            ]
        ]
    },
    {
        "id": "c54c222b7b618c4a",
        "type": "inject",
        "z": "7b027322cdfbb6fc",
        "name": "Clear Log",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "a3ab61dd9be0b1be"
            ]
        ]
    },
    {
        "id": "0689594f2ba0a304",
        "type": "inject",
        "z": "7b027322cdfbb6fc",
        "name": "View Log",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 180,
        "wires": [
            [
                "a292fa66f891a0b8"
            ]
        ]
    },
    {
        "id": "58f3cd1165ed6c70",
        "type": "debug",
        "z": "7b027322cdfbb6fc",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "55db257e14f22b54",
        "type": "http in",
        "z": "7b027322cdfbb6fc",
        "name": "",
        "url": "/log",
        "method": "get",
        "swaggerDoc": "",
        "x": 260,
        "y": 240,
        "wires": [
            [
                "471df61c80a4e535"
            ]
        ]
    },
    {
        "id": "61635b21c88a8723",
        "type": "http response",
        "z": "7b027322cdfbb6fc",
        "name": "",
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "7ea42feb9bf027af",
        "type": "function",
        "z": "7b027322cdfbb6fc",
        "name": "Format log",
        "func": "var filter = msg.filter;\nvar lines = msg.payload.split(\"\\n\");\nvar log = \"\";\nfor(var i = 0;i<lines.length;i++)\n{\n   if(filter === undefined || lines[i].indexOf(filter) >=0)\n        log += \"<p>\"+lines[i]+\"</p>\"; \n}\n\nvar events = context.global.eventlog;\n\nfor(var i = 0;i<events.length;i++)\n{\n    if(filter === undefined || events[i].indexOf(filter) >=0)\n        log += \"<p>\"+events[i]+\"</p>\";\n}\n\nmsg.payload = log;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 240,
        "wires": [
            [
                "61635b21c88a8723"
            ]
        ]
    },
    {
        "id": "471df61c80a4e535",
        "type": "function",
        "z": "7b027322cdfbb6fc",
        "name": "Filter",
        "func": "msg.filter = msg.payload.filter;\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 240,
        "wires": [
            [
                "7bb6e5a89566eba1"
            ]
        ]
    },
    {
        "id": "748e120f3acd24b8",
        "type": "inject",
        "z": "7b027322cdfbb6fc",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 120,
        "wires": [
            [
                "2854908935a09a57"
            ]
        ]
    },
    {
        "id": "2854908935a09a57",
        "type": "function",
        "z": "7b027322cdfbb6fc",
        "name": "Log",
        "func": "context.global.eventlog = [];\n\nfunction log(tag,data)\n{\n    var date = new Date();\n    var line;\n    \n    if(typeof data === 'object')\n    {\n        if(data.payload === undefined)\n            line = date.toISOString()+\": \"+tag+\" \"+JSON.stringify(data); \n        else \n            line = date.toISOString()+\": \"+tag+\" \"+JSON.stringify(data.payload);\n    }\n\n    else\n        line = date.toISOString()+\": \"+tag+\" \"+data;\n\n\n    context.global.eventlog.push(line.replaceAll(\"\\n\",\" \"));\n}\n\n\ncontext.global.log = log;\n\ncontext.global.log(\"Restart \",\"\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "81f0e7c5d5fd3b93",
        "type": "file",
        "z": "7b027322cdfbb6fc",
        "name": "",
        "filename": "AttLog",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 590,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "46a1813e9c402b9b",
        "type": "function",
        "z": "7b027322cdfbb6fc",
        "name": "Write Log",
        "func": "var events = context.global.eventlog;\n\nfor(var i = 0;i<events.length;i++)\n{\n    msg.payload = events[i];\n    node.send(msg)\n}\n\ncontext.global.eventlog = [];\n\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 300,
        "wires": [
            [
                "81f0e7c5d5fd3b93"
            ]
        ]
    },
    {
        "id": "22879e6edb0f77c0",
        "type": "inject",
        "z": "7b027322cdfbb6fc",
        "name": "Write Log",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 300,
        "wires": [
            [
                "46a1813e9c402b9b"
            ]
        ]
    },
    {
        "id": "a292fa66f891a0b8",
        "type": "file in",
        "z": "7b027322cdfbb6fc",
        "name": "",
        "filename": "AttLog",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "58f3cd1165ed6c70"
            ]
        ]
    },
    {
        "id": "7bb6e5a89566eba1",
        "type": "file in",
        "z": "7b027322cdfbb6fc",
        "name": "",
        "filename": "AttLog",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 590,
        "y": 240,
        "wires": [
            [
                "7ea42feb9bf027af"
            ]
        ]
    }
]

